function [Flag, FlagInfo, Summary]=findVariableMS2(Obj, Args)
            % Find variable stars in a single MatchedSources object.
            %   The function do the the following steps:
            %   Set bad flags to NaN using: setBadPhotToNan
            %   Flag stars by data quality using: flagByQuality
            %       Remove soources with bad photometry.
            %   Select by power spectrum thresholding.
            %   Select by rms plot thresholding.
            %   Select by polynomial fitting hypothesis testing.
            %
            % Input  : - A SearchMatchedSources object.
            %          * ...,key,val,...
            %            
            %           
            %            See code for additional arguments
            %
            % Output : - A structure array of variable candidates.
            %            Element per candidate.
            %          - Summary generated by findVariableMS
            % Author : Eran Ofek (Mar 2024)
            % Example: SMS = SearchMatchedSources;
            %          SMS.populateAllConsecutive;
            %          [Cand, Summary] = SMS.findVariableAll('Nvisit',3,'Plot',true);

            arguments
                Obj
               
                Args.BadFlags              = {'Saturated','NaN','Negative'};%{'Overlap','NearEdge','CR_DeltaHT','Saturated','NaN','Negative'};

                Args.MagField              = 'MAG_BEST';
                Args.MaxChi2Dof            = 3;

                Args.MinNdet               = 2;
                Args.MaxOverlapFrac        = 0.5;

                Args.ThresholdPS           = 12;

                Args.NsigmaPredRMS         = 10;
                Args.NsigmaStdRMS          = 7;
                Args.MinDetRMS             = 15;
                Args.MinNptRMS             = 10;
                Args.MinRMS4poly           = 5;
            end

            % set to NaN photometry with bad flags
            Obj.setBadPhotToNan('BadFlags',Args.BadFlags, 'MagField',Args.MagField);

            
            [Flag.FlagGood, FlagInfo]=flagByQuality(Obj, 'MagField',Args.MagField, 'MaxChi2Dof',Args.MaxChi2Dof, 'MinNdet',Args.MinNdet, 'MaxOverlapFrac',Args.MaxOverlapFrac);
           
            % periodicity
            FreqVec = timeSeries.period.getFreq(Obj.MS.JD, 'OverNyquist',0.4, 'MaxFreq',2000);
            [FreqVec, PS, Flag.PS] = period(Obj.MS, FreqVec, 'MagField', Args.MagField, 'ThresholdPS',Args.ThresholdPS);
                    
            % rms
            ResRMS   = Obj.MS.rmsMag('MagField',Args.MagField, 'MinDetRmsVar',Args.MinDetRMS, 'NsigmaPred',Args.NsigmaPredRMS, 'NsigmaStd',Args.NsigmaStdRMS, 'MinNpt',Args.MinNptRMS);
            Flag.RMS = ResRMS.FlagVarPred;


            % std filter
            % FilterBox = true(5,1);
            % IsNaN   = isnan(Obj.MS.Data.MAG_BEST);
            % IsNaN   = imdilate(IsNaN, FilterBox);
            % StdFilt = stdfilt(Obj.MS.Data.MAG_BEST, FilterBox);
            % StdFilt(IsNaN) = NaN;
            % StdVec  = std(Obj.MS.Data.MAG_BEST,[],1, 'omitnan');

            % poly std
            [ResPolyHP, Flag.Poly] = fitPolyHyp(Obj.MS, 'PolyDeg',{0, (0:1), (0:1:2)}, 'ThresholdChi2',[Inf, chi2inv(normcdf([5 6 7],0,1),2)]);
            Flag.Poly = Flag.Poly(:);
            Flag.Poly(ResRMS.NsigmaStd<Args.MinRMS4poly & Flag.Poly) = false;

            % running mean filter
            RMFilt = timeSeries.filter.runMeanFilter(Obj.MS.Data.(Args.MagField));
            Flag.RunMeanFilt = any(RMFilt.FlagCand, 1);

            Summary.FreqVec   = FreqVec;
            Summary.PS        = PS;
            [MaxPS, MaxInd]   = max(PS,[],1);
            Summary.MaxPS     = MaxPS;
            Summary.MaxFreq   = FreqVec(MaxInd);
            Summary.ResPolyHP = ResPolyHP;
            Summary.ResRMS    = ResRMS;
        end