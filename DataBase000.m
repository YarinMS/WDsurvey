%% Initilize database


% Define the path to the SQLite database file
dbFile = 'LAST_WDs.db';

% Establish a connection to the SQLite database
dbConn = sqlite(dbFile, 'create');  % 'create' will create the file if it doesn't exist

% Check if connection is successful
if isopen(dbConn)
    disp('Connected to SQLite database successfully.');
else
    error('Failed to connect to SQLite database.');
end

%% Define the SQL table scheme

% SQL command to create the table
createTableSQL = [...
    'CREATE TABLE IF NOT EXISTS WhiteDwarfs (', ...
    'WD_Name TEXT, ', ...
    'RA DOUBLE, ', ...
    'Dec DOUBLE, ', ...
    'P_wd DOUBLE, ', ...
    'B_p DOUBLE, ', ...
    'Date TEXT, ', ...   % You can also store as DATE depending on your format
    'Telescope TEXT, ', ...
    'VisitID TEXT,', ...
    'FieldID INTEGER, ', ...
    'CropID INTEGER, ', ...
    'NptsDet INTEGER, ', ...
    'NptsEvent INTEGER,', ...
    'BadFlags INTEGER, ', ...
    'NonDetectPts INTEGER, ', ...
    'Neighbors INTEGER, ', ...
    'LimMag DOUBLE, ', ...
    'FWHM DOUBLE, ', ...
    'Airmass DOUBLE, ', ...
    'LC_Quality TEXT, ', ...
    'STDEvent DOUBLE, ', ...
    'Depth DOUBLE, ', ...
    'meanX DOUBLE, ', ...
    'meanY DOUBLE, ', ...
    'SimbadLink TEXT, ', ...
    'ImageLink TEXT, ', ...
    'PRIMARY KEY (WD_Name, Date, Telescope,VisitID)' ... % Composite primary key
    ');'];

% Execute the SQL command to create the table
exec(dbConn, createTableSQL);
disp('Table created or verified successfully.');

%%

% Establish the SQLite database connection (ensure dbConn is open)
dbFile = 'LAST_WDs1.db';
dbConn = sqlite(dbFile);

% SQL command to create the LAST_WDs table if it doesn't exist
createTableSQL = ['CREATE TABLE IF NOT EXISTS LAST_WDs (', ...
    'WD_Name TEXT, ', ...
    'RA DOUBLE, ', ...
    'Dec DOUBLE, ', ...
    'P_wd DOUBLE, ', ...
    'B_p DOUBLE, ', ...
    'Date TEXT, ', ...
    'Telescope TEXT, ', ...
    'FieldID INTEGER, ', ...
    'CropID INTEGER, ', ...
    'NptsDet INTEGER, ', ...
    'BadFlags INTEGER, ', ...
    'NonDetectPts INTEGER, ', ...
    'Neighbors INTEGER, ', ...
    'LimMag DOUBLE, ', ...
    'FWHM DOUBLE, ', ...
    'Airmass DOUBLE, ', ...
    'LC_Quality TEXT, ', ...
    'STDEvent DOUBLE, ', ...
    'Depth DOUBLE, ', ...
    'meanX INTEGER, ', ...
    'meanY INTEGER, ', ...
    'SimbadLink TEXT, ', ...
    'ImageLink TEXT);'];

% Execute the table creation command
execute(dbConn, createTableSQL);

disp('Table LAST_WDs created or already exists.');

% Now proceed to insert the data
% Example light curve metadata for a White Dwarf
wdData = {
    'WD230l0', ...          % WD Name
    12.34, ...            % RA
    -45.67, ...           % Dec
    1.2, ...              % P_wd
    3.4, ...              % B_p
    '2024-01-01', ...     % Date of observation
    'Telescope_1', ...    % Telescope used
    123, ...              % FieldID
    45, ...               % CropID
    100, ...              % NptsDet
    2, ...                % BadFlags
    5, ...                % NonDetectPts
    4, ...                % Neighbors
    20.5, ...             % Limiting Magnitude
    1.1, ...              % FWHM
    1.05, ...             % Airmass
    'Good', ...           % Light curve quality
    0.02, ...             % STD out of event
    0.5, ...              % Depth
    1023, ...             % Mean X position
    2048, ...             % Mean Y position
    'http://simbad.u-strasbg.fr/simbad/sim-id?Ident=WD200', ... % Simbad link
    'http://example.com/image_WD200.png'  % Image link
};

% Manually construct the SQL query by embedding values into the SQL string
insertSQL = sprintf(['INSERT INTO LAST_WDs ', ...
    '(WD_Name, RA, Dec, P_wd, B_p, Date, Telescope, FieldID, CropID, NptsDet, ', ...
    'BadFlags, NonDetectPts, Neighbors, LimMag, FWHM, Airmass, LC_Quality, ', ...
    'STDEvent, Depth, meanX, meanY, SimbadLink, ImageLink) ', ...
    'VALUES (''%s'', %f, %f, %f, %f, ''%s'', ''%s'', %d, %d, %d, ', ...
    '%d, %d, %d, %f, %f, %f, ''%s'', %f, %f, %d, %d, ''%s'', ''%s'');'], ...
    wdData{:});  % Embed the data values into the query string

% Execute the SQL command
execute(dbConn, insertSQL);

disp('Data inserted successfully.');

% Close the database connection
close(dbConn);

%%


% Establish the SQLite database connection (ensure dbConn is open)
dbFile = 'LAST_WDs1.db';
dbConn = sqlite(dbFile);  % Open the existing database

% SQL query to retrieve all rows from the table
selectSQL = 'SELECT * FROM LAST_WDs;';

% Execute the query and fetch the results
results = fetch(dbConn, selectSQL);

% Display the results
disp('Retrieved rows from LAST_WDs:');
disp(results);

% Close the database connection
close(dbConn);
